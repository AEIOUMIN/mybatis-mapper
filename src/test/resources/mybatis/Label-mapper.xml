<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"><mapper namespace="cn.howso.deeplan.psi.commons.dao.LabelMapper"><resultMap id="BaseResultMap" type="cn.howso.deeplan.psi.commons.model.Label"><id column="id" property="id" jdbcType="INTEGER"/><result column="name" property="name" jdbcType="VARCHAR"/><result column="description" property="description" jdbcType="VARCHAR"/><result column="create_time" property="createTime" jdbcType="VARCHAR"/><result column="scene_id" property="sceneId" jdbcType="INTEGER"/><result column="longitude" property="longitude" jdbcType="NUMERIC"/><result column="latitude" property="latitude" jdbcType="NUMERIC"/></resultMap><sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" suffix=")" prefixOverrides="and">
            <foreach collection="criteria.criteria" item="criterion">
              <choose><when test="criterion.noValue">
                  and ${criterion.condition}
                </when><when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when><when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when><when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator=",">
                    #{listItem}
                  </foreach>
                </when></choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql><sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" suffix=")" prefixOverrides="and">
            <foreach collection="criteria.criteria" item="criterion">
              <choose><when test="criterion.noValue">
                  and ${criterion.condition}
                </when><when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when><when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when><when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator=",">
                    #{listItem}
                  </foreach>
                </when></choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql><sql id="Base_Column_List">
    id, name, description, create_time, scene_id, longitude, latitude
  </sql><select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.howso.deeplan.psi.commons.model.LabelExample">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List"/>
    from sy_label
    <if test="_parameter != null">
      <include refid="Example_Where_Clause"/>
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select><select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
    select 
    <include refid="Base_Column_List"/>
    from sy_label
    where id = #{id,jdbcType=INTEGER}
  </select><delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sy_label
    where id = #{id,jdbcType=INTEGER}
  </delete><delete id="deleteByExample" parameterType="cn.howso.deeplan.psi.commons.model.LabelExample">
    delete from sy_label
    <if test="_parameter != null">
      <include refid="Example_Where_Clause"/>
    </if>
  </delete><insert id="insert" parameterType="cn.howso.deeplan.psi.commons.model.Label">
    insert into sy_label (id, name, description, 
      create_time, scene_id, longitude, 
      latitude)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=VARCHAR}, #{sceneId,jdbcType=INTEGER}, #{longitude,jdbcType=NUMERIC}, 
      #{latitude,jdbcType=NUMERIC})
  </insert><insert id="insertSelective" parameterType="cn.howso.deeplan.psi.commons.model.Label">
    insert into sy_label
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="sceneId != null">
        scene_id,
      </if>
      <if test="longitude != null">
        longitude,
      </if>
      <if test="latitude != null">
        latitude,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="sceneId != null">
        #{sceneId,jdbcType=INTEGER},
      </if>
      <if test="longitude != null">
        #{longitude,jdbcType=NUMERIC},
      </if>
      <if test="latitude != null">
        #{latitude,jdbcType=NUMERIC},
      </if>
    </trim>
  </insert><select id="countByExample" parameterType="cn.howso.deeplan.psi.commons.model.LabelExample" resultType="java.lang.Integer">
    select count(*) from sy_label
    <if test="_parameter != null">
      <include refid="Example_Where_Clause"/>
    </if>
  </select><update id="updateByExampleSelective" parameterType="map">
    update sy_label
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=VARCHAR},
      </if>
      <if test="record.sceneId != null">
        scene_id = #{record.sceneId,jdbcType=INTEGER},
      </if>
      <if test="record.longitude != null">
        longitude = #{record.longitude,jdbcType=NUMERIC},
      </if>
      <if test="record.latitude != null">
        latitude = #{record.latitude,jdbcType=NUMERIC},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause"/>
    </if>
  </update><update id="updateByExample" parameterType="map">
    update sy_label
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      description = #{record.description,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=VARCHAR},
      scene_id = #{record.sceneId,jdbcType=INTEGER},
      longitude = #{record.longitude,jdbcType=NUMERIC},
      latitude = #{record.latitude,jdbcType=NUMERIC}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause"/>
    </if>
  </update><update id="updateByPrimaryKeySelective" parameterType="cn.howso.deeplan.psi.commons.model.Label">
    update sy_label
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="sceneId != null">
        scene_id = #{sceneId,jdbcType=INTEGER},
      </if>
      <if test="longitude != null">
        longitude = #{longitude,jdbcType=NUMERIC},
      </if>
      <if test="latitude != null">
        latitude = #{latitude,jdbcType=NUMERIC},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update><update id="updateByPrimaryKey" parameterType="cn.howso.deeplan.psi.commons.model.Label">
    update sy_label
    set name = #{name,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=VARCHAR},
      scene_id = #{sceneId,jdbcType=INTEGER},
      longitude = #{longitude,jdbcType=NUMERIC},
      latitude = #{latitude,jdbcType=NUMERIC}
    where id = #{id,jdbcType=INTEGER}
  </update><insert id="insertAndReturnId" parameterType="map">
  	<selectKey keyProperty="id" resultType="Integer" order="BEFORE">
	                select nextval('sy_label_id_seq')
	  </selectKey>
    insert into sy_label (id, name, description, 
      create_time, scene_id, longitude, 
      latitude)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=VARCHAR}, #{sceneId,jdbcType=INTEGER}, #{longitude,jdbcType=NUMERIC}, 
      #{latitude,jdbcType=NUMERIC})
  </insert></mapper>